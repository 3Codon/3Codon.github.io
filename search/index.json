[{"content":"Hi, welcome to our webpage where we will share our jobs and projects of our career as a team. We hope you enjoy it!\n","date":"2025-02-09T00:00:00Z","image":"https://3codon.github.io/p/hello-world/cover_hu_a26cdb8df3e6ec4b.jpg","permalink":"https://3codon.github.io/p/hello-world/","title":"Hello World"},{"content":" Descripcion del equipo Equipo: #1\nIntegrantes:\nSofia Gamiño Estrada sgamino Jorge Alfredo Suazo Victoria jsuazo Emiliano Ferro Rodriguez eferro Correo Electronico:\nghobibohg@gmail.com emiferro@comunidad.unam.mx jasvpj@gmail.com Descripcion de los datos Descripción Información Bioproject PRJNA494527 Especie Homo Sapiens Tipo de biblioteca single-end Método de Seleccion RNA-Total Número de transcriptomas 34 Número de réplicas biológicas 17 Replicas Biologicas por condicion ( Control y Firma génica inducida por glucocorticoides en la piel humana) Secuenciador Empleado Illumina NextSeq 500 Profundidad de secuenciación de cada transcriptoma 12M a 40M Tamaño de las lecturas 75 bp Articulo Cientifico Sarkar MK, Kaplan N, Tsoi LC, Xing X et al. Endogenous Glucocorticoid Deficiency in Psoriasis Promotes Inflammation and Abnormal Differentiation. J Invest Dermatol 2017 Jul;137(7):1474-1483. PMID: 28259685 Los datos se pueden descargar desde NCBI o usando ENA. run_accession sample_title sample_alias Individuals Type SRR7959189 aaF1 GSM3415442 1 Control SRR7959190 aaF1_GC GSM3415443 1 GC SRR7959191 aaF2 GSM3415444 2 Control SRR7959192 aaF2_GC GSM3415445 2 GC SRR7959193 aaF3 GSM3415446 3 Control SRR7959194 aaF3_GC GSM3415447 3 GC SRR7959195 aaM1 GSM3415448 6 Control SRR7959196 aaM1_GC GSM3415449 6 GC SRR7959197 aaM2 GSM3415450 7 Control SRR7959198 aaM2_GC GSM3415451 7 GC SRR7959199 aaM3 GSM3415452 8 Control SRR7959200 aaM3_GC GSM3415453 8 GC SRR7959201 HS15 GSM3415454 4 Control SRR7959202 HS16 GSM3415455 4 GC SRR7959203 HS17 GSM3415456 9 Control SRR7959204 HS18 GSM3415457 9 GC SRR7959205 HS19 GSM3415458 5 Control SRR7959206 HS20 GSM3415459 5 GC SRR7959207 HS1233_control_S10_R1_001 GSM3415460 10 Control SRR7959208 HS1233_Gc_S11_R1_001 GSM3415461 10 GC SRR7959209 HS1583_control_S1_R1_001 GSM3415462 12 Control SRR7959210 HS1583_Gc_S2_R1_001 GSM3415463 12 GC SRR7959211 HS1609_control_S12_R1_001 GSM3415464 13 Control SRR7959212 HS1609_GC_S13_R1_001 GSM3415465 13 GC SRR7959213 HS1625_control_S3_R1_001 GSM3415466 14 Control SRR7959214 HS1625_Gc_S4_R1_001 GSM3415467 14 GC SRR7959215 HS1659_control_S14_R1_001 GSM3415468 15 Control SRR7959216 HS1659_GC_S15_R1_001 GSM3415469 15 GC SRR7959217 HS1660_control_S16_R1_001 GSM3415470 16 Control SRR7959218 HS1660_GC_S17_R1_001 GSM3415471 16 GC SRR7959219 HS2100_control_S18_R1_001 GSM3415472 17 Control SRR7959220 HS2100_GC_S19_R1_001 GSM3415473 17 GC SRR7959221 HS2191_GC_S8_R1_001 GSM3415474 18 Control SRR7959222 HS2191_control_S7_R1_001 GSM3415475 18 GC Calidad de las secuencias de los datos crudos Conclusión sobre los datos ¿Son viables para continuar el análisis? No, los datos como están no son viables para continuar con el análisis ya que hay muchas secuencias duplicadas (adaptadores) que pueden interferir al momento de alinear, ya que si los dejamos así pueden llegar a alinear en muchos sitios.\nEsto es evidente gracias a la alta cantidad de transcriptomas con un contenido de GC no adecuado, el hecho de que todos los fastq muestran una cantidad desbalanceada de bases por secuencia, las secuencias sobrerepresentadas en una cantidad alta y los niveles altos de duplicación. Todos estos son signos de que los archivos fastq estan crudos.\nAlgo importante a notar es el contenido de GC. Errores en este test pueden deberse a contaminaciones del tejido epitelial por virus o bacterias, lo cual no es nada raro en la piel humana. Es importante considerar esto, ya que en caso de que no mejore se tendría que volver a mandar a secuenciar pero ahora en condiciones esteriles y más estrictas. H\n¿Qué pasos deben seguirse para mejorar la calidad de los datos? Aparte de los adaptadores en las reads, tenemos una calidad de transciptomas muy buena y con buena covertura, por lo cual la secuenciación fue sin problemas.\nEl principal problema que veo aparte de los adpatadores es checar que tanta contaminación tienen nuestras muestras con microorganismos, y que tanto pueden afectar la calidad de nuestras lecturas. En caso de que sea muy prevalente, sería bueno separar las lecturas entre las células epiteliales y los micro-organismos.\nEntonces:\nHacer trimming de los adaptadores, cuidando que la longitud de nuestras reads se mantenga entre 50 y 60. Volver a hacer un multiqc como este y volver a evaluar las calidades. Checar si ha cambiado el contenido de GC. En caso de que no, seguir con los siguientes pasos. Identificar la especie a la que pertenecen los transcritos contaminantes, y agruparlos para dejarlos fuera de nuestras lecturas. Volver a hacer un multiqc, y repetir los pasos a partir del 3 en caso de ser necesario. ","date":"2025-03-03T00:00:00Z","image":"https://3codon.github.io/p/ale_tarea_06/cover_hu_8dfdee3b06725cc4.jpg","permalink":"https://3codon.github.io/p/ale_tarea_06/","title":"Calidad de transcriptoma"},{"content":" Descripción del equipo:\nEquipo: #1 Integrantes: Emiliano Ferro Rodríguez (eferro) Jorge Alfredo Suazo Victoria (jsuazo) Sofia Gamino Estrada (sgamino) Correos electrónicos de los integrantes: Ferro: emiferro@comunidad.unam.mx Suazo: jasvpj@gmail.com Sofia: ghobibohg@gmail.com Descripción de los datos:\nBioproject: PRJNA494527\nEspecie: Homo sapiens\nTipo de bibliotecas: Single-end\nMétodo de selección: Total RNA\nNúmero de transcriptomas: 34\nNúmero de réplicas biológicas: 17 replicas biológicas por condición (control y tratamiento)\nSecuenciador empleado: Illumina NextSeq 500\nDistribución de las muestras: Control: 17 replicas de biopsias de piel de perforación de espesor completo (SRX4792843, SRX479284, - - SRX4792847, SRX4792849, SRX4792851, SRX4792853, SRX4792855, SRX4792857, SRX4792859, SRX4792861, SRX4792863, SRX4792865, SRX4792867, SRX4792869, SRX4792871, SRX4792873, SRX4792876)\nTratamiento: 17 muestras proviene de biopsias de piel tratadas con glucocorticoides (SRX4792844, SRX4792846, SRX4792848, SRX4792850, SRX4792852, SRX4792854, SRX4792856, SRX4792858, SRX4792860, SRX4792862, SRX4792864, SRX4792866, SRX4792868, SRX4792870, SRX4792872, SRX4792874, SRX4792875)\nProfundidad de secuenciación de cada transcriptoma:\nControl:\nMuestra Profundidad SRX4792843 21.3M SRX479284 17.6M SRX4792847 27.3M SRX4792849 25.1M SRX4792851 19M SRX4792853 31.5M SRX4792855 12.6M SRX4792857 12.2M SRX4792859 11.5M SRX4792861 36.2M SRX4792863 26M SRX4792865 24.7M SRX4792867 31.4M SRX4792869 27M SRX4792871 27.2M SRX4792873 28.9M SRX4792876 26.6M Tratamiento: Muestra Profundidad SRX4792844 31.7M SRX4792846 29.3M SRX4792848 20.9M SRX4792850 40.7M SRX4792852 29.3M SRX4792854 23.6M SRX4792856 12.5M SRX4792858 13.5M SRX4792860 13.1M SRX4792862 24.6M SRX4792864 27.3M SRX4792866 29.4M SRX4792868 31.3M SRX4792870 24.1M SRX4792872 23.5M SRX4792874 24.6M SRX4792875 23.5M Tamaño de las lecturas: 75 pb\nArtículo científico: Sarkar MK, Kaplan N, Tsoi LC, Xing X et al. Endogenous Glucocorticoid Deficiency in Psoriasis Promotes Inflammation and Abnormal Differentiation. J Invest Dermatol 2017 Jul;137(7):1474-1483. PMID: 28259685 Los datos se pueden descargar desde NCBI o usando ENA.\n","date":"2025-02-27T00:00:00Z","permalink":"https://3codon.github.io/p/ale_tarea_05/","title":"Eleccion de transcriptoma"},{"content":" First, we will recall what the ChIP-seq method is. Chromatin immunoprecipitation sequencing, or better known as ChIP-seq, is used to analyze protein-DNA interactions. The ChIP method or chromatin immunoprecipitation remains one of the most used techniques in molecular biology. It consists of cross-linking proteins to DNA with formaldehyde and then fragmenting the DNA. And the associated DNA is then analyzed.\nUsing formaldehyde or ultraviolet light we can obtain cross-linking of proteins from DNA, remembering that the concept of cross-linking is “…the process of chemically joining two or more molecules by a covalent bond.” (ThermoFisher scientific). In the case of proteins from DNA, we use immunoprecipitation to study the interactions between proteins and DNA. After that, the DNA is fragmented and finally the associated DNA is analyzed. First, let’s remember what the ChIP-seq method is. Chromatin immunoprecipitation sequencing, or better known as ChIP-seq, is used to analyze protein-DNA interactions. The ChIP method or chromatin immunoprecipitation remains one of the most widely used techniques in molecular biology. It consists of cross-linking proteins to DNA with formaldehyde and then fragmenting the DNA. And then the associated DNA is analyzed.\nUsing formaldehyde or ultraviolet light we can obtain the cross-linking of proteins from DNA, remembering that the concept of cross-linking is “…the process of chemically joining two or more molecules by a covalent bond.” (ThermoFisher scientific). In the case of proteins from DNA, we use immunoprecipitation to study the interactions between proteins and DNA. Then the DNA is fragmented and finally the associated DNA is analyzed.\nResearchers linked the ChIP technique with next-generation sequencing (NGS), to identify DNA fragments and map them to a reference genome, this is the ChIP-seq method. Its function is to “…identify DNA-associated protein binding sites and provide information on protein binding across the genome.” (Immy Mobley, 2021). This method determines how chromatin-associated proteins associate, such as how transcription factors influence mechanisms that change phenotype.\nRef: https://frontlinegenomics-com.translate.goog/what-are-chip-seq-and-bisulfite-sequencing/?_x_tr_sl=en\u0026amp;_x_tr_tl=es\u0026amp;_x_tr_hl=es\u0026amp;_x_tr_pto=tc https://pubmed-ncbi-nlm-nih-gov.translate.goog/8993035/ https://www-thermofisher-com.translate.goog/us/en/home/life-science/protein-biology/protein-biology-learning-center/protein-biology-resource-library/pierce-protein-methods/overview-crosslinking-protein-modification.html?_x_tr_sl=en\u0026amp;_x_tr_tl=es\u0026amp;_x_tr_hl=es\u0026amp;_x_tr_pto=tc\nCreate the H3K36me3 plot. Explain the commands used and the reason behind them. Heatmap of only one signal. 1. Creating a score Matrix of one of the H3K36me3 Chip seq First we use the command computeMatrix. This command creates a matrix with scores assigned to the regions defined in the .bed file, usually genes. The file created can then be graphed with plotHeatmap of plotProfiles. This command allows us as well to filter and sort according to scores.\nWe used the following options:\nreference-point: This is a sub command that allow us to chose a region of the bed file(s) and then plot for a fixed number of bp upstream and/or downstream. S: File(s) to be plotted according to their scores. They need to be bw files. In our case we used only the bw corresponding to the chip seq of H3K36me3. R: File(s) to use as a reference for regions in the plot. We can use GTF of BED files. If we use multiple of these, they will be considered as different plots. We used a single bed that was proportioned in the materials. –referencePoint: This option allow id to define the reference point for ploting. It can either be in the end (TSE), in the start (TSS) or in the center. The default is TSE, but in this case we used center. -out: refers to the name of the output file. [sgamino@compute-00-00 deepTools]$ computeMatrix reference-point -S H3K36me3.bw -R Human38_genesGencodev39.bed --referencePoint center -a 2000 -b 2000 -out matrix_H3K36me3_matrix.tab.gz According to the options then, we will end up with a score matrix whom will contain the signals in a region +2000 and -2000 bp from the center of the bed file.\nRef: https://deeptools.readthedocs.io/en/develop/content/tools/computeMatrix.html\n\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; Updated upstream ### 2. Create the heatmap of the score matrix with plotHeatmap\nWe then used the command plotHeatmap, which as its name suggests, plots our score matrix in a heatmap. This command allows us to costumize our heatmaps in a myriad of ways. ======= ## 2. Create the heatmap of the score matrix with plotHeatmap\nStashed changes\nThe options used were: - -m: Is the score matrix. - -out: This option allows us to save the heatmap in a file. - –heatmapHeight: Sets the height of the heatmap. - –refPointLabel: Allows us to put a legend in the heatmap describing the reference point. - –regionsLabel: Is an option used to set the type of regions that are represented in the bed, and put a legend with that info in the heatmap. - –plotTitle: Allows us to put a title in the heatmap.\n[sgamino@compute-00-00 deepTools]$ plotHeatmap -m matrix_H3K36me3_matrix.tab.gz -out H3K36me3_genes.png --heatmapHeight 15 --refPointLabel gene.center --regionsLabel genes --plotTitle \u0026#39; H3K36me3 signal\u0026#39; Ref: https://deeptools.readthedocs.io/en/develop/content/tools/plotHeatmap.html\n3. Analysis of the heatmap The heatmap of the chip seq is the following:\nAs we can see, the heatmap contains a los of information but it is usorted and ulfiltered, so it looks a little messy. If we added parameters like –skipzeros or one of the many sort options available in computeMatrix and plotHeatmap.\nComparing multiple signals in one plot This time, we will compare the heatmaps of multiple alignments in a single graph.\n1. Creating a score matrix for each bw Because we are working with various files, each one of them will have their own score matrix. In this case, we used some new options such as:\nscale-regions: In this mode (as opposed to the reference point), we will shruk or expand the regions of the bed depending on the length proportioned by the user. –beforeRegionStartLength: Distance upstream of the start site of the regions defined in the region file. If the regions are genes, this would be the distance upstream of the transcription start site.- The default is O –regionBodyLength: Distance in bases to which all regions will be fit. The default is 1000. –afterRegionStartLength: Distance downstream of the end site of the given regions. If the regions are genes, this would be the distance downstream of the transcription end site. The default is 0 as well. ..skipZeros: This option allows us to skip regions which have no signal or score. The default is to include them. [sgamino@compute-00-00 deepTools]$ computeMatrix scale-regions -S H3K27me3.bw H3K36me3.bw H3K4me3.bw -R Human38_genesGencodev39.bed -- beforeRegionStartLength 1000 --regionBodyLength 1000 -- afterRegionStartLength 1000 --skipZeros -o matrix.mat.gz 2. Create the heatmap of the score matrix with plotHeatmap The command used was the following and no options were used:\n[sgamino@compute-00-00 deepTools]$ plotHeatmap -m matrix.mat.gz -out ExampleHeatmap1.png Analysis of the heatmaps The result of the matrixes can be represented in three different heatmaps:\nCreate the mouse ChIP-seq plot. Explain the commands used and the reason behind them. Is the plot of those regions informative? We did a heatmap of the sample of mouse than we used in the last homework, but we want to remember that the fastq of this sample had a bad quality and for this reason the heatmap hadn’t a good resolution of signals.\nFirst we check the first command that we used:\n# Generate a matrix of coverage values computeMatrix scale-regions -S coverage.bw -R hgTables.bed --beforeRegionStartLength 1000 --regionBodyLength 1000 --afterRegionStartLength 1000 --skipZeros --outFileName matrix_mouse.mat.gz The first part of the code we generate a matrix of covarage values, they have this parts.\ncomputeMatrix: This tool calculates scores for regions of the genome and creates an intermediate file that can be used with the plotHeatmap and plotProfiles.\nSubcomands: In the part of subcomads, we use:\nscale-regions: The user chooses up to what length (in bases) the regions of the BED file should be stretched or shrunk. To use this subcomand we need three arguments, that they are in our code:\n–regionsFileName, -R Here we need write the name or names of the archives in format BED or GTF, they contains the regions to draw.\n–scoreFileName, -S Here we write the name of the Bigwig file that contains the scores to be drawn. We can get the Bigwig files with the tools bamCoverage or bamCompare.\nOpcional arguments:\n–beforeRegionStartLength, -b, –upstream: This argument is the distance upstream distance from the start site of the regions defined in the region file. In the case of our code it add 1000 bp (base pairs) before the start of each gene.\n–afterRegionStartLength, -a, –downstream: This argument is the Distance downstream from the final site of the given regions. In the case of our code it add 1000 bp (base pairs) after the start of each gene.\n–regionBodyLength, -m: This argument is the distance in bases to which all regions will adjust. In our code, we set the scale so that the body length of each gene is 1000 bp, regardless of its actual size.\nIn these optional arguments we set it to 1000 bp because given that the sample has a bad quality and this is the default number in this tools, also it allows us to focus on areas where there is most likely to be a genuine signal, avoiding noise from distant regions.\nExit options:\n–outFileName, -out, -o:In this option we write the name that we want to call the output. This gzipped matrix is necessary to tools plotHeatmap and plotProfile.\nRef: https://deeptools.readthedocs.io/en/develop/content/tools/computeMatrix.html\n# Create the heatmap plotHeatmap -m matrix_mouse.mat.gz -out Heatmap_mouse.png In the case of the second code we use:\nplotHeatmap: This tool generates a heat map that shows us the intensity of epigenetic marks around genes.\nRequired arguments:\n–matrixFile, -m: We put in this argument the archive of the matrix of the tool computeMatrix.\n–outFileName, -out, -o: In this argument put the name that we want to the image for the Heatmap. It could be: png, eps, pdf and svg.\nRef: https://deeptools.readthedocs.io/en/develop/content/tools/plotHeatmap.html#id2\nNow, we analyze the Heatmap that we did of the mouse sample:\nFirst, we focus of the superior graph, it show us the Average coverage. The X axis, show the distance in pair of bases. We have 3 parts:\nTSS: Transcription Start Site: This part represent the 1000 pb before of the gene, and it is represented -1.0 kb.\nTES: Transcription End Site: This is the final of the gene, and it is represented TES.\nRegion downtream: It is 1000 pb after the final of the gene, it is represented, +1.0 kb.\nIn the Y axis show the average signal strength in each region, and we can see a peak around of TSS and another smaller around of TES, it means that: - In the part of TSS, this is where starts the transcription of the gene, before the coding region and despite limitations in sample quality, BigWig reads still show correlation with biologically relevant regions. - The TES region and downstream portions show that due to poor sample quality they have very low overall coverage.\nNow we analyze the heatmap:\nEach row represents one gene. The color indicates the intesity of the coverage: - Dark red: Indicates low or no signal. - Dark Blue:Indicates High signal.\nWe see the majority of the regions are in red, indicates poor covarage, because the sample of the mouse had a bad quality. The less blue areas are found a high signal acumulation in the TSS, and agrees with the peak in the last graph; it means that the Histone modifications represented in the BigWig file are more concertrated in the promoter regions of the genes, that is, the promoters of many genes are marked or potentially active.\nRef: https://bioinformatics.ccr.cancer.gov/docs/data-visualization-with-r/Lesson5_intro_to_ggplot/ https://deeptools.readthedocs.io/en/develop/content/example_gallery.html https://www.biostars.org/p/180314/ TidyTuesday plot. Choose a dataset that is of your interest and make a graph with them. We choose Long Beach Animal Shelter dataset, it is a dataset that contains information about the animals that are in the shelter, the date that they arrived, the date that they left, the type of animal, the breed, the color, etc.\nSuazo Graph It shows the coordinates where the animal was found, the color of the point is according to the type of animal, and the popup shows the ID, the type and the name of the animal.\nleaflet(data = longbeach) %\u0026gt;% addTiles() %\u0026gt;% addCircleMarkers(~longitude, ~latitude, radius = 5, color = ~case_when( animal_type == \u0026quot;dog\u0026quot; ~ \u0026quot;blue\u0026quot;, animal_type == \u0026quot;cat\u0026quot; ~ \u0026quot;red\u0026quot;, animal_type == \u0026quot;bird\u0026quot; ~ \u0026quot;green\u0026quot;, animal_type == \u0026quot;reptile\u0026quot; ~ \u0026quot;orange\u0026quot;, animal_type == \u0026quot;rabbit\u0026quot; ~ \u0026quot;purple\u0026quot;, TRUE ~ \u0026quot;gray\u0026quot; ), popup = ~paste(\u0026quot;\u0026lt;strong\u0026gt;ID:\u0026lt;/strong\u0026gt;\u0026quot;, animal_id, \u0026quot;\u0026lt;br\u0026gt;\u0026lt;strong\u0026gt;Tipo:\u0026lt;/strong\u0026gt;\u0026quot;, animal_type, \u0026quot;\u0026lt;br\u0026gt;\u0026lt;strong\u0026gt;Nombre:\u0026lt;/strong\u0026gt;\u0026quot;, animal_name)) Because this is difficult to present in paper, we also decided to make another graph about the state that the animals were when they arrived at the shelter, and if they are dead or not.\nresumen2 \u0026lt;- longbeach %\u0026gt;% filter(!is.na(animal_type), !is.na(intake_condition), !is.na(outcome_is_dead)) %\u0026gt;% group_by(animal_type, intake_condition, outcome_is_dead) %\u0026gt;% summarise(n = n(), .groups = \u0026quot;drop\u0026quot;) ggplot(resumen2, aes(x = animal_type, y = intake_condition, size = n, color = outcome_is_dead)) + geom_point(alpha = 0.7) + labs(title = \u0026quot;Frecuencia de animales según especie, condición de ingreso y resultado\u0026quot;, x = \u0026quot;Especie\u0026quot;, y = \u0026quot;Condición de ingreso\u0026quot;, size = \u0026quot;Cantidad\u0026quot;, color = \u0026quot;¿Está muerto?\u0026quot;) + theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) ","date":"2025-02-23T00:00:00Z","image":"https://3codon.github.io/covera.jpg","permalink":"https://3codon.github.io/p/ale_tarea_04/","title":"Visualization 2"},{"content":" • Using bwa index de e. coli genome a Suazo:\nmodule load bwa/0.7.17 bwm index Escherichia_coli_K12_MG1655.fasta This would create multiple files\nArchive Description .amb Contain Infromation about ambigous bases (N) in the sequence. .ann Contain Annotation about genome, like sequences names and lenghts. .bwt Contain compressed representation of the genome using Burrows-Wheeler algorithm. .pac Contain packed genome sequence in 2 bits per base. It is used to search the genome. .sa Contain the suffix array of the genome. • Align reads from a FNR ChIP-seq experiment Suazo:\nbwa mem Escherichia_coli_K12_MG1655.fasta SRX189773_FNR_ChIP.fastq This will generate a SAM file with the alignment of the reads to the genome.\nPreview:\n@SQ\tSN:NC_000913.2\tLN:4639675 @PG\tID:bwa\tPN:bwa\tVN:0.7.17-r1188\tCL:bwa mem Escherichia_coli_K12_MG1655.fasta SRX189773_FNR_ChIP.fastq SRR576933.1\t0\tNC_000913.2\t914875\t60\t36M\t*\t0\t0\tAAGCATGGAATAACCGCCTGGTGAATGCTCGCCATA EDEA=EEEEEBFBDFDEBDAD=DDBAC5CCEEE:E@\tNM:i:0\tMD:Z:36\tAS:i:36\tXS:i:0 SRR576933.2\t0\tNC_000913.2\t147284\t60\t36M\t*\t0\t0\tTGGAGGCTGACCACGATAAGCTGCCGCTGGTGGTGC\tEDF:D?=DEEE?EEE5DDDAEB:ECEBBEA\u0026gt;AA956\tNM:i:0\tMD:Z:36\tAS:i:36\tXS:i:0 SRR576933.3\t0\tNC_000913.2\t1572373\t60\t36M\t*\t0\t0\tAGTGCGATGCCGTTCACCCGGTTTTCTTTATCATTA\tEEEEED=DD?AD=DDEEBEDEBBECCD\u0026gt;\u0026gt;\u0026gt;BB?EE5\tNM:i:0\tMD:Z:36\tAS:i:36\tXS:i:0 • Using the available indexed genomes in the cluster (/mnt/Archives/genome/) align reads of a mouse ChIP-seq experiment to the genome. • Please analyze the quality of the data, try using fastqc ;)\nHere you go, fastqc\nFerro: What is FASTQC?\nOne of the essential steps in research on the molecule of life is its sequencing. Once the samples have been extracted, the sequencing process is carried out to obtain the nucleotide sequence of the samples. Currently, the new sequencing technology “…can generate hundreds of thousands of sequences in a single run.” (Babraham institute). But it should be mentioned that before doing an analysis of the sequences to reach a conclusion, it is important to do a simple quality control on the fastq files, to observe how well the raw files look for future analysis and thus avoid biases that can affect the research.\nTo do quality tests for fastq files, there is the FASTQC tool, whose output is a report of the problems that arose in the sequencer or in the start library.This tool can be run in two different modes, the first is as a stand-alone interactive application that can perform a quick analysis with a few fastq files or as a non-interactive mode, where the analysis process is larger, since it does a “…systematic processing of large amounts of files.” (Babraham institute)\nTo use the tool fastqc I charged the module fastqc/0.12.1 to start the analysis of the quality of the data.\nRef:https://www.bioinformatics.babraham.ac.uk/projects/fastqc/Help/1%20Introduction/1.1%20What%20is%20FastQC.html\nmodule load fastqc/0.12.1 module list Currently Loaded Modulefiles: 1) gcc/5.1.0 2) sge/2011.11p1 3) bcftools/1.10.2 4) fastqc/0.12.1 Once charged the module my next step is used the next command to analyze the quality of the fastq:\nfastqc mus_musculus_CEBPA_liver_ERR005132.fastq.gz The output of this comand line is two archives:\nmus_musculus_CEBPA_liver_ERR005132_fastqc.html mus_musculus_CEBPA_liver_ERR005132_fastqc.zip The first file, redirects you to the results of the analysis performed by this tool, which contains a summary showing which of these filters the fastq managed to pass and which ones did not:\nSummary\nBasic Statistics Per base sequence quality Per tile sequence quality Per sequence quality scores Per base sequence content Per sequence GC content Per base N content Sequence Length Distribution Sequence Duplication Levels Overrepresented sequences Adapter Content Also each filter of the summary has a graph that shows us more precise and visual the information of the result of this filters.\nIn the case of our fastq we have this results:\n[PASS] Basic Statistics [FAIL] Per base sequence quality [FAIL] Per tile sequence quality [FAIL] Per sequence quality scores [FAIL] Per base sequence content [PASS] Per sequence GC content [PASS] Per base N content [PASS] Sequence Length Distribution [PASS] Sequence Duplication Levels [PASS] Overrepresented sequences [PASS] Adapter Content Now we will analyze the four filters that failed the FASTQC test:\nThis graph shows us the quality scores for the base call. Green indicates the call has good quality, yellow has reasonable quality, and red if the quality is very poor.\nIn our case we can see that most base calls have low or reasonable quality as they are in the red and yellow part, this helps us conclude that the call quality per base is poor.\nRef:https://www.bioinformatics.babraham.ac.uk/projects/fastqc/Help/3%20Analysis%20Modules/2%20Per%20Base%20Sequence%20Quality.html\nThis graph shows quality per tile indicating whether there are variations in quality in different regions of the sequencing process by comparing the sequencing quality at different positions within the read (X) to different tiles in the flow cell (Y) and whether certain tiles (sections of the sequencing machine sensor) produce lower quality data.\nDark blue tells us that there is high quality in most positions and tiles. Red/yellow areas show us specific regions with lower quality, which may indicate problems in some tiles in the sequencing flow.\nIn the case of our fastq we can see that most tiles and reading positions have a high quality, which is a good sign, but there are some areas with red and yellow dots around positions 12-20 bp and 30-35 bp. This tells us that in some tiles, the quality is significantly lower at those positions.\nRef:https://www.bioinformatics.babraham.ac.uk/projects/fastqc/Help/3%20Analysis%20Modules/12%20Per%20Tile%20Sequence%20Quality.html\nThis graph shows us how poorly photographed the sequences are. The X-axis tells us the sequence’s quality score on the PHRED scale and the Y-axis tells us the number of sequences that contain that score. Our fastq shows that most sequences have an average quality of around 12-15, which means that the accuracy percentage is less than 95%, meaning that the probability of that sequence being correct is low.\nRef: https://www.bioinformatics.babraham.ac.uk/projects/fastqc/Help/3%20Analysis%20Modules/3%20Per%20Sequence%20Quality%20Scores.html\nThis graph shows the content of each of the nucleotides throughout the read. It is expected that in this graph we can see that the same content of A is equal to the content of T, and in the same way the same content of C must be equal to the content of G. In our case we can observe that at the beginning of the reading the same number of A and T and the same number of C and G are conserved, but from position 20-21 the amount of C deviates and ends up having the same amount of T as C, at the same time in that same position the content of A deviates and ends up having the same amount of A as G. It seems that, halfway through the reading, the amount of purines (A and G) equals each other, as well as the amount of pyrimidines (C and T). The next step would be to investigate what was the cause that caused this error.\nRef:https://www.bioinformatics.babraham.ac.uk/projects/fastqc/Help/3%20Analysis%20Modules/4%20Per%20Base%20Sequence%20Content.html\nIn order for our FASTQ file to pass the four filters above, it must be subjected to a filtering process that improves its quality and thus avoids bias in the research.\nThe other filters are those that passed the FASTQC test, indicating that:\nIt does not have a percentage of N content in all databases. Ref:https://www.bioinformatics.babraham.ac.uk/projects/fastqc/Help/3%20Analysis%20Modules/6%20Per%20Base%20N%20Content.html\nIt has sequence fragments of uniform length ref:https://www.bioinformatics.babraham.ac.uk/projects/fastqc/Help/3%20Analysis%20Modules/7%20Sequence%20Length%20Distribution.html\nIt contain a low level of duplication, this can indicate that they have a high level of coverage. Ref:https://www.bioinformatics.babraham.ac.uk/projects/fastqc/Help/3%20Analysis%20Modules/8%20Duplicate%20Sequences.html\nIt does not contain overrepresented sequences. Ref:https://www.bioinformatics.babraham.ac.uk/projects/fastqc/Help/3%20Analysis%20Modules/9%20Overrepresented%20Sequences.html https://www.bioinformatics.babraham.ac.uk/projects/fastqc/Help/3%20Analysis%20Modules/11%20Kmer%20Content.html\nIt does not present this adapter sequences:\nIllumina Universal Adapter\nIllumina Small RNA 3’ Adapter\nIllumina Small RNA 5’ Adapter\nNextera Transposase Sequence\nPolyA\nPolyG\nRef:https://www.bioinformatics.babraham.ac.uk/projects/fastqc/Help/3%20Analysis%20Modules/10%20Adapter%20Content.html\nSofi:\nI started by finding the route in which the mouse genome fasta was allocated (/mnt/Archives/genome/mouse/)mm10/UCSC/bwa-0.7.15-index/index/mm10.fa).\nI just used one command to do the alignment:\nmodule load bwa/0.7.8 bwa mem /mnt/Archives/genome/mouse/mm10/UCSC/bwa-0.7.15-index/index/mm10.fa /mnt/atgc-d1/bioinfoII/sgamino/alignment/mus_musculus_CEBPA_liver_ERR005132.fastq.gz \u0026gt; /mnt/atgc-d1/bioinfoII/sgamino/alignment/mouse_align_exp.sam This leaves us with a SAM file that will contain the aligned reads to the reference genome mm10.fa. Its important to note that the quality of the fasta is bad, so if we desire more confidence in our alignment we should perform base recalibration to search for possible reads of the adaptors.\nThis is the job i submitted with qsub job.sge.\n#!/bin/bash # Use current working directory #$ -cwd # # Join stdout and stderr #$ -j y # # Run job through bash shell #$ -S /bin/bash # #You can edit the scriptsince this line # # Your job name #$ -N mouse_align_experiment # # Allocated memory #$ -l vf=30G # Send an email after the job has finished #$ -m e #$ -M ghobibohg@gmail.com # # If modules are needed, source modules environment (Do not delete the next line): . /etc/profile.d/modules.sh # # Add any modules you might require: module load bwa/0.7.8 # # Write your commands in the next line bwa mem /mnt/Archives/genome/mouse/mm10/UCSC/bwa-0.7.15-index/index/mm10.fa /mnt/atgc-d1/bioinfoII/sgamino/alignment/mus_musculus_CEBPA_liver_ERR005132.fastq.gz \u0026gt; /mnt/atgc-d1/bioinfoII/sgamino/alignment/mouse_align_exp.sam Preview:\n[sgamino@chromatin alignment]$ head -50 mouse_align_exp.sam @SQ\tSN:chr10\tLN:130694993 @SQ\tSN:chr11\tLN:122082543 @SQ\tSN:chr12\tLN:120129022 @SQ\tSN:chr13\tLN:120421639 @SQ\tSN:chr14\tLN:124902244 @SQ\tSN:chr15\tLN:104043685 @SQ\tSN:chr16\tLN:98207768 @SQ\tSN:chr17\tLN:94987271 @SQ\tSN:chr18\tLN:90702639 @SQ\tSN:chr19\tLN:61431566 @SQ\tSN:chr1\tLN:195471971 @SQ\tSN:chr2\tLN:182113224 @SQ\tSN:chr3\tLN:160039680 @SQ\tSN:chr4\tLN:156508116 @SQ\tSN:chr5\tLN:151834684 @SQ\tSN:chr6\tLN:149736546 @SQ\tSN:chr7\tLN:145441459 @SQ\tSN:chr8\tLN:129401213 @SQ\tSN:chr9\tLN:124595110 @SQ\tSN:chrM\tLN:16299 @SQ\tSN:chrUn_GL456239\tLN:40056 @SQ\tSN:chrUn_GL456359\tLN:22974 @SQ\tSN:chrUn_GL456360\tLN:31704 @SQ\tSN:chrUn_GL456366\tLN:47073 @SQ\tSN:chrUn_GL456367\tLN:42057 @SQ\tSN:chrUn_GL456368\tLN:20208 @SQ\tSN:chrUn_GL456370\tLN:26764 @SQ\tSN:chrUn_GL456372\tLN:28664 @SQ\tSN:chrUn_GL456378\tLN:31602 @SQ\tSN:chrUn_GL456379\tLN:72385 @SQ\tSN:chrUn_GL456381\tLN:25871 @SQ\tSN:chrUn_GL456382\tLN:23158 @SQ\tSN:chrUn_GL456383\tLN:38659 @SQ\tSN:chrUn_GL456385\tLN:35240 @SQ\tSN:chrUn_GL456387\tLN:24685 @SQ\tSN:chrUn_GL456389\tLN:28772 @SQ\tSN:chrUn_GL456390\tLN:24668 @SQ\tSN:chrUn_GL456392\tLN:23629 @SQ\tSN:chrUn_GL456393\tLN:55711 @SQ\tSN:chrUn_GL456394\tLN:24323 @SQ\tSN:chrUn_GL456396\tLN:21240 @SQ\tSN:chrUn_JH584304\tLN:114452 @SQ\tSN:chrX\tLN:171031299 @SQ\tSN:chrY\tLN:91744698 @PG\tID:bwa\tPN:bwa\tVN:0.7.8-r455\tCL:bwa mem /mnt/Archives/genome/mouse/mm10/UCSC/bwa-0.7.15-index/index/mm10.fa /mnt/atgc-d1/bioinfoII/sgamino/alignment/mus_musculus_CEBPA_liver_ERR005132.fastq.gz ERR005132.1\t4\t*\t0\t0\t*\t*\t0\t0\tGATTTACAAGCATATAAACATATAATAAACAACAGCTTTCAT\tIIIII/IIIICIIIII45II8*%II)I/+\u0026amp;.%*3II\u0026#39;(C3I#\tAS:i:0\tXS:i:0 ERR005132.2\t4\t*\t0\t0\t*\t*\t0\t0\tGGTGAAATGACTGAGTCTTCACCCGGTTGGACAGCCCCCCCC\tI1I%III9I)D40I\u0026#39;(*,#;*%%03#-0E)=$)HI#%$,\u0026amp;(.\tAS:i:0\tXS:i:0 ERR005132.3\t4\t*\t0\t0\t*\t*\t0\t0\tAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tAS:i:0\tXS:i:0 ERR005132.4\t4\t*\t0\t0\t*\t*\t0\t0\tGATATCGTAATCTGCCAACTGCCATCCCCTCATCTCACACCC\tIII*7\u0026amp;E.0I%-+:?;C71I\u0026amp;\u0026gt;2:.C$3;//*5/)*,($)=.\tAS:i:0\tXS:i:0 UPDATE: Sofia: Turns out, with the last alignment we had 0.0% of alignments ((T_T)/), so we proceeded to remove adaptors with trimmomatic.\nFerro: We used trimmomatic to be able to remove adapters and process our fastq file.\nTrimmomatic: “Trimmomatic is a fast, multi-threaded command line tool that can be used to trim Illumina (FASTQ) data and to remove adapters” (http://www.usadellab.org)\nThis tool has two modes: For Single-end and Paired-end fastq files\nThe Paired-end mode keeps the match of read pairs and uses the additional information in the paired reads to find the adapters or PCR primers.\nTrimmomatic works with fastq files with quality scores phred+33 or phred+64. It accepts files compressed with gzip or bzip2.\nRef:http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/TrimmomaticManual_V0.32.pdf\nSofia: First we loaded the archive which contains the adaptors from illumina, with the name TruSeq3-SE.fa. Its insides are:\n\u0026gt;TruSeq3_IndexedAdapter AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC \u0026gt;TruSeq3_UniversalAdapter AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA Then, we proceeded to run the next command in a job:\n-threads 4 -phred64 -trimlog /mnt/atgc-d1/bioinfoII/sgamino/alignment/aln_mouse_liver/mus_musculus_CEBPA_liver_ERR005132.trimlog -summary /mnt/atgc-d1/bioinfoII/sgamino/alignment/aln_mouse_liver/TRIM_mus_musculus_CEBPA_liver_ERR005132.summary /mnt/atgc-d1/bioinfoII/sgamino/alignment/mus_musculus_CEBPA_liver_ERR005132.fastq.gz /mnt/atgc-d1/bioinfoII/sgamino/alignment/aln_mouse_liver/TRIM_mus_musculus_CEBPA_liver_ERR005132.fastq.gz ILLUMINACLIP:/mnt/atgc-d1/bioinfoII/sgamino/Adapters/TruSeq3-PE-2.fa:2:30:10 SLIDINGWINDOW:4:25 This command takes reads with high quality (30) but does NOT has a MINLEN argument to define the minimun lenght of the reads. For that reason, the cut sometimes is very big for the read and we end un with many reads with a lenght of less than 36 bp. In this case we remain with around 10 million reads, with an average lenght of 14 bp.\nFerro: After to use the tool trimming, now we analize the qualification of the new file fastq filtered with the tool fastqc.\nWe have these new results for our fastq: - [PASS] Basic Statistics - [PASS] Per base sequence quality - [PASS] Per sequence quality scores - [FAIL] Per base sequence content - [PASS] Per sequence GC content - [PASS] Per base N content - [WARN] Sequence Length Distribution - [PASS] Sequence Duplication Levels - [WARN] Overrepresented sequences - [PASS] Adapter Content\nIn contrast to the first graphs of the analysis with fastqc we see that the filters that had not passed already passed after trimmomatic was used.\nIn the filter called Quality by base sequence we can see that the average quality of each base in each position of the read is in the green region, which indicates that these positions have good quality. Comparing it with the previous graph, we observe that the quality has increased.\nIn the case of Per sequence quality scores, with this graph we can confirm that Trimmomatic did filter the minimum size of reads that we asked for, since most of the reads have a size of 36 bp, which was the minimum size we were looking for.\nThe case of Per base sequence content Although the new fastq passed this filter, we can see that at the end of the graph the amount of Thymine increases and that of Adenine decreases until having approximately the same amount of Cytosine, in addition to the fact that Cytosine increases and at the end there is a greater amount of Cytosine than its complementary nucleotide, Guanine. It seems that at the end of the graph, the amount of pyrimidine type nucleotides increases. Therefore, even when it passed the filter, there are still different amounts between the complementary nucleotides.\nFinally we got two filters that found an error but not so serious as to fail the test:\nIn Sequence length distribution we can also see that the trimming was filtered correctly, since in this graph we can see that most of the samples have a size of 36 bp as requested by the tool, and it also indicates that there are also many 42 bp reads. This filter can appear in WARM because there may be a wide distribution of lengths, that is, “not all sequences have the same length” (Babraham Institute), or because the trimming made a cut but not in a uniform way, or because the library is fragmented or due to sequencing errors or if the sequences were trimmed with the adapter..\nRef:https://www.bioinformatics.babraham.ac.uk/projects/fastqc/Help/3%20Analysis%20Modules/7%20Sequence%20Length%20Distribution.html https://docs.omicsbox.biobam.com/latest/FastQC-Quality-Check/\nSequence\tCount\tPercentage\tPossible Source AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\t922\t0.18814713840854458\tNo Hit In Overrepresented sequencesIt gives us a sequence of 40 adenines, and that this was found 922 times in the data sequence, and represents approximately 0.19% of the total, for this reason, the fastqc tool puts this filter in WARM\nRef:https://www.bioinformatics.babraham.ac.uk/projects/fastqc/Help/3%20Analysis%20Modules/9%20Overrepresented%20Sequences.html https://docs.omicsbox.biobam.com/latest/FastQC-Quality-Check/\nSofia: The code for the alignment is the following:\nbowtie /mnt/Archives/genome/mouse/mm10/UCSC/bowtie-0.12.7-index/index/mm10 /mnt/atgc-d1/bioinfoII/sgamino/alignment/aln_mouse_liver/TRIM_mus_musculus_CEBPA_liver_ERR005132.fastq -S /mnt/atgc-d1/bioinfoII/sgamino/alignment/aln_mouse_liver/TRIM_mus_musculus_CEBPA_liver_ERR005132.sam I also performed a trimming but with a MINLEN value of 36, as it is the minimum lenght for an appropiate read. The code used is the following:\nbowtie /mnt/Archives/genome/mouse/mm10/UCSC/bowtie-0.12.7-index/index/mm10 /mnt/atgc-d1/bioinfoII/sgamino/alignment/aln_mouse_liver/TRIM_minlen36_mus_musculus_CEBPA_liver_ERR005132.fastq -S /mnt/atgc-d1/bioinfoII/sgamino/alignment/aln_mouse_liver/TRIM_minlen36_mus_musculus_CEBPA_liver_ERR005132.sam And the alignment:\nbowtie /mnt/Archives/genome/mouse/mm10/UCSC/bowtie-0.12.7-index/index/mm10 /mnt/atgc-d1/bioinfoII/sgamino/alignment/aln_mouse_liver/TRIM_minlen36_mus_musculus_CEBPA_liver_ERR005132.fastq -S /mnt/atgc-d1/bioinfoII/sgamino/alignment/aln_mouse_liver/TRIM_minlen36_mus_musculus_CEBPA_liver_ERR005132.sam ","date":"2025-02-11T00:00:00Z","image":"https://3codon.github.io/p/ale_tarea_02/cover_hu_8dfb6fe53a80b51c.jpg","permalink":"https://3codon.github.io/p/ale_tarea_02/","title":"Practical alignment"},{"content":" IGV We will use IGV to visualize data for Plasmodium chabaudi AS (P. chabaudi) P. Chabaudi is a malaria mouse pathogen.\nUsing the files in: /mnt/atgc-d1/bioinfoII/data/IGV, we will visualize RNA-seq data. Load the genome from a file (note it has been indexed) Load annotations for the genome. Your browser does not support the video tag. Which one is the annotation file? Suazo: The annotation files are the ones with the extension .gff3 which stands for General Feature Format version 3.\nWhat is this format describing? Suazo: The ggf3 format is a tab-delimited file that describes the features of a genome, such as DNA, RNA and protein sequences. It is a standard format for genome annotation.\nWhat is the browser displaying? Suazo: The browser is displaying information about the annotations of genes, transcriptions and exons.\nWhat happens if you zoom in or out? Suazo: When you zoom in, the browser displays more detailed information about the annotations such as nucleotides. When you zoom out, the browser displays less detailed information.\nLoad an alignment file for an RNA-seq experiment MT1 and MT2 Is the data in the correct format? Suazo: No, the format provided is in FASTQ format, which is not compatible with IGV. We need to convert it to BAM format.\nWhat kind of data do you need? This is RNA-seq data so we need special aligners to take into account isoforms.\nSuazo: We need to align the data to the genome. Sofia: For that reason, we need data in the form of bam and their index, bam.bai.\nWe will use HISAT2 to map the RNA-Seq reads from our samples to the reference genome. HISAT2 is a fast and sensitive splice-aware aligner. We need to index the genome hisat2-build PccAS_v3_genome.fa PccAS_v3_hisat2.idx Now we can align hisat2 --max-intronlen 10000 -x PccAS_v3_hisat2.idx -1 MT1_1.fastq -2 MT1_2.fastq -S MT1.sam We need to convert the sam to bam and sort the file… We also need an index so IGV can access the data quickly. # We align the Pair Ended reads hisat2 --max-intronlen 10000 -x PccAS_v3_hisat2.idx -1 MT1_1.fastq -2 MT1_2.fastq -S MT1.sam hisat2 --max-intronlen 10000 -x PccAS_v3_hisat2.idx -1 MT2_1.fastq -2 MT2_2.fastq -S MT2.sam # We convert the SAM files to BAM files samtools view MT1.sam -O BAM -o MT1.bam samtools view MT2.sam -O BAM -o MT2.bam # We sort the BAM files samtools sort MT1.bam -o MT1.sorted.bam samtools sort MT2.bam -o MT2.sorted.bam # We index the BAM files samtools index MT1.sorted.bam samtools index MT2.sorted.bam Ferro: ## We should do the same for sample MT2\nNow we can load the BAM files to IGV… Remember you need the index What do you see?, explore the genome. We observe that at the top of the reads they tell us the coverage of each coding sequence and the coverage can help us infer which exons are more expressed among all the exons in the sample. We can see that the reads are cut very precisely and between each set of reads of each exon there is a GAP or a space, this is due to the prediction of the splicing junctions and that the reads are cut, which is what IGV does to be able to map the reads in the reference genome. Also with this, IGV represents the splicing junctions as a red or blue curve.\nRef:https://www.youtube.com/watch?v=awGN-rpLYas https://igv.org/doc/desktop/#UserGuide\nVisualize loci: PCHAS_0505200 and PCHAS_1409500 [sgamino@compute-00-11 IGV]$ grep \u0026quot;PCHAS_0505200\u0026quot; PccAS_v3.gff3 PccAS_05_v3\tDEFAULT\tgene\t202496\t203599\t.\t-\t.\tID=PCHAS_0505200 PccAS_05_v3\tDEFAULT\tmRNA\t202496\t203599\t.\t-\t.\tID=PCHAS_0505200.1;Parent=PCHAS_0505200 PccAS_05_v3\tDEFAULT\tCDS\t202496\t202583\t.\t-\t1\tID=PCHAS_0505200.1:exon:2216;Parent=PCHAS_0505200.1 PccAS_05_v3\tDEFAULT\tCDS\t202719\t202869\t.\t-\t2\tID=PCHAS_0505200.1:exon:2217;Parent=PCHAS_0505200.1 PccAS_05_v3\tDEFAULT\tCDS\t202994\t203081\t.\t-\t0\tID=PCHAS_0505200.1:exon:2218;Parent=PCHAS_0505200.1 PccAS_05_v3\tDEFAULT\tCDS\t203199\t203269\t.\t-\t2\tID=PCHAS_0505200.1:exon:2219;Parent=PCHAS_0505200.1 PccAS_05_v3\tDEFAULT\tCDS\t203452\t203599\t.\t-\t0\tID=PCHAS_0505200.1:exon:2220;Parent=PCHAS_0505200.1 [sgamino@compute-00-11 IGV]$ grep \u0026quot;PCHAS_1409500\u0026quot; PccAS_v3.gff3 PccAS_14_v3 DEFAULT gene 377689 378830 . + . ID=PCHAS_1409500 PccAS_14_v3 DEFAULT mRNA 377689 378830 . + . ID=PCHAS_1409500.1;Parent=PCHAS_1409500 PccAS_14_v3 DEFAULT CDS 377689 377868 . + 0 ID=PCHAS_1409500.1:exon:12588;Parent=PCHAS_1409500.1 PccAS_14_v3 DEFAULT CDS 378016 378165 . + 0 ID=PCHAS_1409500.1:exon:12589;Parent=PCHAS_1409500.1 PccAS_14_v3 DEFAULT CDS 378669 378830 . + 0 ID=PCHAS_1409500.1:exon:12590;Parent=PCHAS_1409500.1 This way, we can know the position of these loci.\nFerro: ### What do you see? First, let’s remember what the mRNA maturation process is: The result of the DNA transcription process is an RNA molecule called pre-mRNA, this molecule is characterized by containing introns and exons. The premature RNA molecule enters a process called spicing where the spliceosome removes the introns and only leaves the coding sequences (CD). Then the regions where the spliceosome cuts are called splicing junctions, which are the regions where the exons are joined and thus we obtain the mature mRNA ready to begin the translation process. Now when we get the mRNA sequencing reads at the time of aligning them with the reference genome, but the problem is that some reads do not map to the reference genome, therefore to align what is done is that IGV predicts the splicing junctions and cuts the reads and aligns them with the coding sequences (CD), and with this the more coverage the different exons have, we can observe which exons are being expressed. Also IGV when predicting the splice junctions, represents the jumps between exons as arcs. If the arcs are red, it represents the splicing junctions of the positive strand, while the blue arcs represent the splicing junctions of the negative strand. The thickness and height of these curves are determined by the amount of reads you have in a given junction.\nIn our sample, we can see that the PCHAS_0505200 loci has 5 coding sequences and each of them has a good coverage, and the coding sequences are of different sizes. All the representations of the splicing junctions are from the negative strand, since it is colored blue. On the other hand, the PCHAS_1409500 loci only has 3 coding sequences, we can see that the curves that represent the junctions are red, this indicates that these arcs are splicing junctions from the positive strand. In both samples we can also see at the top that it tells us how many coverages each exon has, in our sample, it tells us that there are high coverages in each coding sequence that the loci has.\nRef:https://www.youtube.com/watch?v=awGN-rpLYas https://igv.org/doc/desktop/#UserGuide\nCan you export the figure? Yes, IGV allows you to export the image of what you are working on. To be able to extract the image you must first center what you want to show, then at the top of the tool there are several options including “File” and there are two formats in which you can extract the image, such as a png image or an SVG image, you select the format you want and it will export the image to your files. We extract the images in png.\nIGV Mouse Using IGV try to visualize the data for mouse ChIP-seq you generated. Is a liver data set, can you point to an interesting loci? No, because when we aligned the RNA-seq sequences from the loci after trimming, we remained with around 400k reads with adequate quality. This amount of reads is neglible, son any assesment is almost impossible to do. For example, this is the kind of information we get from a loci:\nUse UCSC Genome Browser How can you upload the data? Bam Bigwig What is BigWig? BigWig (bw) is a type of format useful to display information on genome browsers visualizers, as it does not needs to charge all reads, but only those in the region displayed, called “sparse”. BigWig files contain information of aligned reads for each position.\nIt is an indexed file and the info is saved in a server external to the genome browser.\nBigWig files are created from wiggle (wig) type files using the program wigToBigWig\nCreate a BigWig using deepTools bamCoverage -b reads.bam -o coverage.bw You might need to try https://de.cyverse.org/ or any server could work.\nCan you contextualize your results to other available data sets? Yes we can. In the UCSC genome browser, we can compare in real time our results to those obtained in a variety of experiments and projects like the ENCODE project. For example, we can know the results of CHIPseq alignment of many types of proteins, and then compare with our own CHIP seq experiments to see if they are congruent to the know literature.\n","date":"2025-02-09T00:00:00Z","image":"https://3codon.github.io/p/ale_tarea_03/covera_hu_f5c84adb7d2b9bd5.jpg","permalink":"https://3codon.github.io/p/ale_tarea_03/","title":"Genome Browsers"},{"content":" Practical BAM file • Using your VPN go to the cluster\n• Using the file NA20538.bam located at /mnt/atgc-d1/bioinfoII/data/format_qc\n• Answer the following questions\nWhat does RG stand for? Sgam: It means read group, wich in turn indicates the number of reads for a specific sample. Its important to mention that when multiplexing in a single lane, each library or sample has its own read group. The relevance of having read groups from the same sample in different lanes and flow cells is to be able to discern which part of the error is due to the sequenciator or other circumnstances (batch effect).\nFerro: The @RG stand has this information:\nID: Is a read group identifier. Each @RG line must have a unique ID. The value of this ID is used in the RG tags of alignment record labels. When merging the SAM files for collision control you can modify the IDs.\nBC (barcode): Is a sequence that identify the library or the sample. It value If the sample or library has several barcodes, it is recommended to concatenated all the barcodes with hyphens (“-”)\nCN: Name of sequencing center producing the read. DS: It is the description.\nRef: https://support.illumina.com/help/BS_App_MDProcessor_Online_1000000007932/Content/Source/Informatics/BAM-Format.htm, https://gatk.broadinstitute.org/hc/en-us/articles/360035890671-Read-groups https://samtools.github.io/hts-specs/SAMv1.pdf\nSuazo:\nsamtools view -H NA20538.bam | grep \u0026#39;^@RG\u0026#39; @RG\tID:ERR003612\tPL:ILLUMINA\tLB:g1k-sc-NA20538-TOS-1\tPI:2000\tDS:SRP000540\tSM:NA20538\tCN:SC @RG\tID:ERR003761\tPL:ILLUMINA\tLB:g1k-sc-NA20538-TOS-1\tPI:2000\tDS:SRP000540\tSM:NA20538\tCN:SC @RG\tID:ERR003762\tPL:ILLUMINA\tLB:g1k-sc-NA20538-TOS-1\tPI:2000\tDS:SRP000540\tSM:NA20538\tCN:SC @RG\tID:ERR003763\tPL:ILLUMINA\tLB:g1k-sc-NA20538-TOS-1\tPI:2000\tDS:SRP000540\tSM:NA20538\tCN:SC @RG\tID:ERR003764\tPL:ILLUMINA\tLB:g1k-sc-NA20538-TOS-1\tPI:2000\tDS:SRP000540\tSM:NA20538\tCN:SC @RG\tID:ERR003765\tPL:ILLUMINA\tLB:g1k-sc-NA20538-TOS-1\tPI:2000\tDS:SRP000540\tSM:NA20538\tCN:SC @RG\tID:ERR003766\tPL:ILLUMINA\tLB:g1k-sc-NA20538-TOS-1\tPI:2000\tDS:SRP000540\tSM:NA20538\tCN:SC @RG\tID:ERR003767\tPL:ILLUMINA\tLB:g1k-sc-NA20538-TOS-1\tPI:2000\tDS:SRP000540\tSM:NA20538\tCN:SC @RG\tID:ERR003811\tPL:ILLUMINA\tLB:g1k-sc-NA20538-TOS-1\tPI:2000\tDS:SRP000540\tSM:NA20538\tCN:SC @RG\tID:ERR003812\tPL:ILLUMINA\tLB:g1k-sc-NA20538-TOS-1\tPI:2000\tDS:SRP000540\tSM:NA20538\tCN:SC @RG\tID:ERR003813\tPL:ILLUMINA\tLB:g1k-sc-NA20538-TOS-1\tPI:2000\tDS:SRP000540\tSM:NA20538\tCN:SC @RG\tID:ERR003814\tPL:ILLUMINA\tLB:g1k-sc-NA20538-TOS-1\tPI:2000\tDS:SRP000540\tSM:NA20538\tCN:SC @RG\tID:ERR003815\tPL:ILLUMINA\tLB:g1k-sc-NA20538-TOS-1\tPI:2000\tDS:SRP000540\tSM:NA20538\tCN:SC @RG\tID:ERR003816\tPL:ILLUMINA\tLB:g1k-sc-NA20538-TOS-1\tPI:2000\tDS:SRP000540\tSM:NA20538\tCN:SC @RG\tID:ERR015472\tPL:ILLUMINA\tLB:g1k-sc-NA20538-A\tPI:450\tDS:SRP000540\tSM:NA20538\tCN:SC What is the lane ID? (“Lane” is the basic independent run of a high- throughput sequencing machine. For Illumina machines, this is the physical sequencing lane. Reads from one lane are identified by the same read group ID and the information about lanes can be found in the header in lines starting with “@RG”.) We suppose that the Lane ID in this case is the tag ID, which does not repeat. According to https://gatk.broadinstitute.org/hc/en-us/articles/360035890671-Read-groups, there could be multiplexing in each lane, and for that reason i’m confused with the definition that all samples of a lane are represented by the same RG.\nWhat is the sequencing platform? Illumina, represented by the tag PL\nHint: you want to use samtools. Files are huge so remember to pipe. samtools view -H NA20538.bam | less -S\nWhat version of the human assembly was used to perform the alignments? Ferro:\nsamtools view -H NA20538.bam | head -n 2 @HD\tVN:1.0\tGO:none\tSO:coordinate @SQ\tSN:1\tLN:249250621\tAS:NCBI37\tUR:ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/technical/reference/human_g1k_v37.fasta.gz\tM5:1b22b98cdeb4a9304cb5d48026a85128\tSP:Human In this example, we can see that the Reference Sequence Dictionary (@SQ) has a part called, Genome Assembly Identifier (@AS) that indicates that the reference genome used in this BAM file is the GRCh37 version.\nWhat programs were used to create this BAM file? samtools view -H NA20538.bam | less -S\nSuazo:\n@PG ID:GATK IndelRealigner VN:1.0.4487 CL:SNPsFileForDebugging=null targetIntervals=/lustre/scratch105/projects/g1k/ref/broad_rec... @PG ID:GATK TableRecalibration VN:1.0.4487 CL:output_bam=null window_size_nqs=5 force_read_group=null smoothing=1 default_pla... The Programs used were GATK IndelRealigner and GATK TableRecalibration\nWhat version of bwa was used to align the reads? Suazo:\n@PG ID:bwa VN:0.5.5 The version of bwa used was 0.5.5\nWhat is the name of the first read? Suazo:\nsamtools view NA20538.bam | grep -m 1 \u0026quot;^ERR\u0026quot; | awk \u0026#39;{print $1}\u0026#39; ERR003814.1408899 The name of the first read is ERR003814.1408899\nWhat position does the alignment of the read start at? samtools view NA20538.bam | less -S\nSuazo:\nERR003814.1408899 163 1 19999970 23 37M = 20000147 213 GGTGGGTGGATCACCTGAGATCGGGAGTTTGAGA The position of the alignment of the read start at 19999970\nWhat is the mapping quality of the first read? Suazo:\nERR003814.1408899 163 1 19999970 23 37M = 20000147 213 GGTGGGTGGATCACCTGAGATCGGGAGTTTGAGA The mapping quality of the first read is 23\nPractical bcf Now use file 1kg.bcf\nWhat is a bcf? Sofia: A bcf is like a vcf, but in binary, in which the fields are arranged for fast access. They store information about variants in read alignments.\nCan you convert bcf to vcf using bcftools? Sofia: Yes, with a command in bcftools called view. View has an -O option which can be transformed into -Oz to transsform a bcf file into a compressed vcf; it also can be -Ov, which transforms a bcf file into a uncompressed vcf. For example:\n[sgamino@compute-00-05 format_qc]$ bcftools view -O v -o output.vcf 1kg.bcf How many samples are in the BCF? Hint: use the -l option. Sofia:\n[sgamino@compute-00-05 format_qc]$ grep -v \u0026quot;#\u0026quot; output.vcf | wc -l 10000 There are 10000 samples.\nWhat is the genotype of the sample HG00107 at the position 20:24019472? Hint: use the combination of -r, -s, and -f ‘[ %TGT]’ options.\nSofia:\n[sgamino@compute-00-05 format_qc]$ awk \u0026#39;{for(i=1; i\u0026lt;=NF; i++) if ($i == \u0026quot;HG00107\u0026quot;) print i}\u0026#39; output.vcf 19 [sgamino@compute-00-05 format_qc]$ grep \u0026quot;24019472\u0026quot; output.vcf | awk \u0026#39;{print $19}\u0026#39; 0/1:235,0,148:16 The genotype of the sample HG00107 in the locus 20:24019472 is a heterozygous, with the variant 1. The genotype is not phased, so we don’t know from which of the parents each allele comes from. But we can search this information if we have a vcf for the parents and then we use the tool isec from bcftools to do phasing parental.\nRef:https://samtools.github.io/bcftools/bcftools.html\nHow many positions there are with more than 10 alternate alleles? (See the INFO/AC tag.) Hint: use the -i filtering option. Ferro:\nbcftools view -i \u0026#39;INFO/AC \u0026gt; 10\u0026#39; output.vcf \u0026gt; resultado.vcf less -S resultado.vcf | head -n 50 \u0026gt; header.vcf #CHROM POS ID REF ALT QUAL FILTER INFO FORMAT HG00096 HG00097 HG00099 HG00100 HG00101 HG00102 HG00103 HG00105 HG00106 HG00107 HG00108 HG00109 HG00110 HG00111 HG00 20 23946710 . C T 999 . AN=98;AC=94;AC_Het=4;AC_Hom=90;AC_Hemi=0 GT:PL:DP 1/1:77,6,0:2 1/1:141,15,0:5 0/1:45,0,68:5 1/1:211,21,0 20 23948049 . A G 999 . AN=98;AC=97;AC_Het=1;AC_Hom=96;AC_Hemi=0 GT:PL:DP 1/1:129,9,0:3 1/1:232,33,0:11 0/1:26,0,32:2 1/1:255,42,0 20 23948593 . G A 999 . AN=96;AC=90;AC_Het=4;AC_Hom=86;AC_Hemi=0 GT:PL:DP 1/1:86,9,0:3 1/1:193,21,0:7 0/1:174,0,111:11 1/1: 20 23949020 . A G 999 . AN=98;AC=93;AC_Het=5;AC_Hom=88;AC_Hemi=0 GT:PL:DP 1/1:255,21,0:7 1/1:255,33,0:11 0/1:178,0,60:8 1/1:255,33,0 20 23949210 . A G 999 . AN=100;AC=95;AC_Het=5;AC_Hom=90;AC_Hemi=0 GT:PL:DP 1/1:109,12,0:4 1/1:255,42,0:14 0/1:54,0,67:4 1/1:255,45,0 20 23949344 . A C 999 . AN=100;AC=100;AC_Het=0;AC_Hom=100;AC_Hemi=0 GT:PL:DP 1/1:186,15,0:5 1/1:255,36,0:12 1/1:139,12,0:4 1/1:237,30,0 wc -l output.vcf 10043 output.vcf wc -l resultado.vcf 4822 resultado.vcf Previously, we converted the file 1kg.bcf to output.vcf in order to display the information. With the help of the view tool of bcftools we use complement filler tags, i.e. we use INFO/AC to count how many positions there are with more than 10 alternative alleles. So we create an archive vcf with this positions, it calls resultado.vcf.\nWe create the vcf called header.vcf to show an example of the contein of the archive resultado.vcf.\nFinally we count the number of variants in the original vcf (output.vcf) and the filtered vcf (resultado.vcf) and we can see that the archive has 4822 variants that have an alternative allele frequency (AC) greater than 10, that is, they have at least 11 alternative alleles that are found in the population.\nRef:https://samtools.github.io/bcftools/bcftools.html#view https://samtools-github-io.translate.goog/bcftools/howtos/plugin.fill-tags.html?_x_tr_sl=en\u0026amp;_x_tr_tl=es\u0026amp;_x_tr_hl=es\u0026amp;_x_tr_pto=tc\nList all positions where HG00107 has a non-reference genotype and the read depth is bigger than 10. Ferro:\nbcftools view -s HG00107 -i \u0026#39;GT!=\u0026quot;0/0\u0026quot; \u0026amp;\u0026amp; GT!=\u0026quot;./.\u0026quot; \u0026amp;\u0026amp; FORMAT/DP\u0026gt;10\u0026#39; input.vcf.gz | wc -l 9820 What we did is use view to visualize our requested genotype (sample HG00107), then we asked for only the unfiltered genotypes with GT!=“0/0” \u0026amp;\u0026amp; GT!=“./.” and with FORMAT/DP\u0026gt;10 we made sure that we only have the variants that have a reading depth greater than 10 since we access the Format section where it contains the DP field that tells us the reading depth. And finally we counted the number of variants that meet these requirements in the vcf.\nWe obtained that there are 9820 variants that meet the requirements of non-referential genotype and reading depth greater than 10.\nbcftools view -s HG00107 -i \u0026#39;GT!=\u0026quot;0/0\u0026quot; \u0026amp;\u0026amp; GT!=\u0026quot;./.\u0026quot; \u0026amp;\u0026amp; FORMAT/DP\u0026gt;10 \u0026amp;\u0026amp; FORMAT/GQ\u0026gt;20\u0026#39; output.vcf | wc -l 0 We wanted to be a little more strict in the filtering since we observed that when filtering and finding non-reference genotypes, some referential variants were still found, so we added GQ\u0026gt;20 to the previous command, which is Genotype Quality, to filter variants that have a score greater than 20 since it is considered that from 10 to 20, the called genotype is reasonably adequate, and thus we increase the precision of the filtering to obtain unreferenced genotypes.\nBut when running the command, we get a result of 0, and that could mean that by adding GQ we are making the filtering too strict, so we prefer to use a less strict filtering that gives us some referenced genotypes.\nPractical stats Using samtools stats answer\nsamtools stats NA20538.bam | grep ^SN\nWhat is the total number of reads? Suazo:\nSN\traw total sequences:\t347367\t# excluding supplementary and secondary reads What proportion of the reads were mapped? Suazo:\nSN\treads mapped:\t323966 The proportion of the reads that were mapped is 323966/347367 = 0.932 ### How many reads were mapped to a different chromosome?\nSN\tpairs on different chromosomes:\t4055 There were 4055 reads mapped to a different chromosome\nWhat is the insert size mean and standard deviation? SN\tinsert size average:\t190.3 SN\tinsert size standard deviation:\t136.4 The insert size mean is 190.3 and the standard deviation is 136.4\nHint: options -F SECONDARY Get used to combine these commands with basic linux commands (|, grep, less, head, etc.)\n","date":"2025-02-09T00:00:00Z","image":"https://3codon.github.io/p/ale_tarea_01/cover_hu_819163aa128d5fe6.jpg","permalink":"https://3codon.github.io/p/ale_tarea_01/","title":"QC Formats"}]